{"version":3,"sources":["el.ts","uuid.ts","create.ts","header.ts","style.ts","indexComponent.ts"],"names":[],"mappings":"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","file":"indexComponent.6c2cc5fb.js","sourceRoot":"..\\src","sourcesContent":["export declare interface toolsInterface {\r\n  grab(tempSelector: string): Element;\r\n  toggleClass(className: string): toolsInterface;\r\n  addClass(className: (string[] | string)): toolsInterface;\r\n  removeClass(className: (string[] | string)): toolsInterface;\r\n  replaceWith(string: string): toolsInterface;\r\n  replaceWithElement(tagName: string, idForNewElement?: (string | null)): toolsInterface;\r\n  html(string?: (string | null)): (string | toolsInterface);\r\n  remove(): toolsInterface;\r\n  set(setObj: Object): toolsInterface;\r\n  child(HTMLElement: HTMLElement, insertAt?: (\"append\" | \"prepend\" | null)): toolsInterface;\r\n  children(): NodeListOf<ChildNode>;\r\n  text(txt: string | Array<any> | Object | number): toolsInterface;\r\n  textChild(string: string | Array<any> | Object | number): toolsInterface;\r\n  data(dataSuffix: string): string;\r\n  id(idForEl?: string): string | toolsInterface\r\n  on(eventName: string, eventHandler: (event: any, opt?: any, opt2?: any, opt3?: any) => void): toolsInterface\r\n  off(eventName: string, eventHandler: (event: any, opt?: any, opt2?: any, opt3?: any) => void): toolsInterface;\r\n}\r\n\r\nexport const el = function(selector: string){\r\n  let element: Element;\r\n  const tools: toolsInterface = {\r\n    grab(tempSelector: string): Element {\r\n      if (element) return element;\r\n      return document.querySelector(tempSelector);\r\n    },\r\n    toggleClass(className: string): toolsInterface {\r\n      element.classList.toggle(className);\r\n      return this;\r\n    },\r\n    addClass(className: string[] | string): toolsInterface {\r\n      if (Array.isArray(className)){\r\n        className.forEach((singleClass: string): void => element.classList.add(singleClass));\r\n      } else {\r\n        element.classList.add(className);\r\n      }\r\n      return this;\r\n    },\r\n    removeClass(className: string[] | string): toolsInterface {\r\n      if (Array.isArray(className)){\r\n        className.forEach((singleClass: string): void => element.classList.remove(singleClass));\r\n      } else {\r\n        element.classList.remove(className);\r\n      }\r\n      return this;\r\n    },\r\n    replaceWith(string: string): toolsInterface {\r\n      element.outerHTML = string;\r\n      return this;\r\n    },\r\n    replaceWithElement(tagName: string, idForNewElement: string | null = null): toolsInterface {\r\n      const newEl: HTMLElement = document.createElement(tagName);\r\n      const idToUse: string = idForNewElement || element.id;\r\n      newEl.id = idToUse;\r\n      element.parentNode.replaceChild(newEl, element);\r\n      return el(`#${idToUse}`);\r\n    },\r\n    html(string: string | null = null): string | toolsInterface {\r\n      if (!string) return element.innerHTML;\r\n      element.innerHTML = string;\r\n      return this;\r\n    },\r\n    remove(): toolsInterface {\r\n      element.parentNode.removeChild(element);\r\n      return this;\r\n    },\r\n    set(setObj: Object): toolsInterface {\r\n      Object.keys(setObj).forEach((key: string): void => {\r\n        element.setAttribute(key, setObj[key as keyof typeof setObj] as any);\r\n      });\r\n      return this;\r\n    },\r\n    child(HTMLElement: HTMLElement, insertAt: 'append' | 'prepend' | null = null): toolsInterface {\r\n      if (insertAt === 'append' || insertAt == null) { element.append(HTMLElement); }\r\n      if (insertAt === 'prepend'){ element.prepend(HTMLElement); }\r\n      return this;\r\n    },\r\n    children(): NodeListOf<ChildNode> {\r\n      return element.childNodes;\r\n    },\r\n    text(txt: string | Array<any> | Object | number): toolsInterface {\r\n      element.textContent = txt.toString();\r\n      return this;\r\n    },\r\n    textChild(string: string | Array<any> | Object | number): toolsInterface {\r\n      const textEl: Text = document.createTextNode(string.toString());\r\n      element.appendChild(textEl);\r\n      return this;\r\n    },\r\n    id(idForEl: string | null = null): toolsInterface | string {\r\n      if (idForEl){\r\n        element.id = idForEl\r\n        return this\r\n      }\r\n      return element.id;\r\n    },\r\n    data(dataSuffix: string): string {\r\n      return element.getAttribute(`data-${dataSuffix}`);\r\n    },\r\n    on(eventName: string, eventHandler: (event: any, opt?: any, opt2?: any, opt3?: any) => void): toolsInterface {\r\n      element.addEventListener(eventName, eventHandler);\r\n      return this;\r\n    },\r\n    off(eventName: string, eventHandler: (event: any, opt?: any, opt2?: any, opt3?: any) => void): toolsInterface {\r\n      element.removeEventListener(eventName, eventHandler);\r\n      return this;\r\n    },\r\n  };\r\n  element = tools.grab(selector);\r\n  return tools;\r\n}\r\nexport default el;\r\n","export const createUUID = () => 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c: string) => {\r\n  let r: number = Math.random() * 16 | 0, v: number = c == 'x' ? r : (r & 0x3 | 0x8);\r\n  return v.toString(16);\r\n});\r\nexport default createUUID();\r\n","import el, {toolsInterface} from './el';\r\nimport {createUUID} from './uuid';\r\n\r\nexport const create = function(tagName: string, appendTo: string): toolsInterface {\r\n  const newEl: HTMLElement = document.createElement(tagName);\r\n  newEl.id = `${tagName}-${createUUID()}`;\r\n  document.querySelector(appendTo).appendChild(newEl);\r\n  return el(`#${newEl.id}`);\r\n};\r\nexport default create;\r\n","import create from '../tools/create';\r\nimport {toolsInterface} from '../tools/el';\r\nimport Style from '../tools/style';\r\n\r\nexport const header = (appendTo: string, title: string, theme: Style): toolsInterface => {\r\n  theme.add(`\r\n.header {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.title {\r\n  padding: 25px 30px;\r\n  margin: 40px 0;\r\n  color: #03e9f4;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: 0.5s;\r\n  letter-spacing: 4px;\r\n  overflow: hidden;\r\n  margin-right: 50px;\r\n}\r\n.title:hover {\r\n  background: #03e9f4;\r\n  color: #050801;\r\n  box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4,\r\n  0 0 200px #03e9f4;\r\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\r\n}\r\n\r\n.title:nth-child(1) {\r\n  filter: hue-rotate(110deg);\r\n}\r\n\r\n.title span {\r\n  position: absolute;\r\n  display: block;\r\n}\r\n.title span:nth-child(1) {\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #03e9f4);\r\n  animation: animate1 1s linear infinite;\r\n}\r\n\r\n@keyframes animate1 {\r\n  0% { left: -100%; }\r\n  50%,\r\n  100% { left: 100%; }\r\n}`)\r\n\r\n  const spanFactory = (): HTMLSpanElement => document.createElement('span')\r\n\r\n  const out = create('div', appendTo).addClass('header').id()\r\n  return create('span', `#${out as string}`)\r\n    .text(title)\r\n    .addClass('title')\r\n    .child(spanFactory(), 'prepend')\r\n    .child(spanFactory(), 'prepend')\r\n    .child(spanFactory(), 'prepend')\r\n    .child(spanFactory(), 'prepend')\r\n}\r\nexport default header;\r\n","import {createUUID} from './uuid';\r\n\r\nexport class Style {\r\n  private sheet: string;\r\n  private id: null | string;\r\n  private blocks: any[];\r\n\r\n  constructor(css: string) {\r\n    this.sheet = '';\r\n    this.blocks = [];\r\n    this.id = null;\r\n    this.blocks.push(css)\r\n    this.render();\r\n  }\r\n\r\n  render(): void {\r\n    const css: HTMLStyleElement = document.createElement('style');\r\n    this.id = `style-${createUUID()}`\r\n    css.id = this.id;\r\n    this.sheet += this.blocks[0]\r\n    css.appendChild(document.createTextNode(this.sheet))\r\n    document.getElementsByTagName('head')[0].appendChild(css);\r\n  }\r\n\r\n  rerender(): void {\r\n    this.sheet = '';\r\n    this.blocks.forEach(block => this.sheet += block)\r\n    document.getElementById(this.id).childNodes[0].textContent = this.sheet;\r\n  }\r\n\r\n  add(block: string): void {\r\n    if (this.blocks.filter(cssBlock => cssBlock === block).length === 0) this.blocks.push(block);\r\n    this.rerender()\r\n  }\r\n\r\n  remove(block: string): void {\r\n    this.blocks = this.blocks.filter(cssBlock => cssBlock !== block);\r\n    this.render();\r\n  }\r\n}\r\nexport default Style;\r\n","import header from './components/header';\r\nimport Style from './tools/style';\r\n\r\nconst theme: Style = new Style(`\r\n@import url(\"https://fonts.googleapis.com/css2?family=Raleway:wght@400;700&display=swap\");\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  height: 100vh;\r\n  background: #050801;\r\n  font-family: \"Raleway\", sans-serif;\r\n  font-weight: bold;\r\n}`)\r\n\r\nheader('body', 'The Coffee Drip', theme);\r\n"]}